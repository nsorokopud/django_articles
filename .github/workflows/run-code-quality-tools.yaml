name: Run Code Quality Tools

on:
  workflow_call:

env:
  DJANGO_SETTINGS_MODULE: config.settings.test
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  DEBUG: ${{ secrets.DEBUG }}
  SCHEME: ${{ secrets.SCHEME }}
  DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
  ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
  GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
  HCAPTCHA_SITEKEY: ${{ secrets.HCAPTCHA_SITEKEY }}
  HCAPTCHA_SECRET: ${{ secrets.HCAPTCHA_SECRET }}
  USE_AWS_S3: ${{ secrets.USE_AWS_S3 }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}
  EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
  EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
  EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
  EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
  EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}

jobs:
  run_code_quality_tools:
    runs-on: ubuntu-latest
    name: Run Code Quality Tools

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.2
          cache: 'pip'
      - name: Install Python Dependencies
        run: pip install -r requirements-dev.txt
      - name: Install Node.js Dependencies
        run: |
          npm install
      - name: Run Djade
        run: |
          djade --target-version 5.1 --check $(git ls-files '*.html')
      - name: Run djLint
        run: |
          djlint --check --lint $(git ls-files '*.html')
      - name: Run Prettier
        run: |
          npx prettier --check .
      - name: Run ESLint
        run: |
          npx eslint $(git ls-files '*.js')
      - name: Run isort
        run: |
          isort $(git ls-files '*.py')
      - name: Run Black
        run: |
          black --check $(git ls-files '*.py')
      - name: Run Bandit
        run: |
          bandit -c pyproject.toml -r $(git ls-files '*.py')
      - name: Run Flake8
        run: |
          flake8 $(git ls-files '*.py')
      - name: Run Pylint
        run: |
          pylint $(git ls-files '*.py')
      - name: Run mypy
        run: |
          mypy --install-types --non-interactive \
          --config-file pyproject.toml $(git ls-files '*.py')
